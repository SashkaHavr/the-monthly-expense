/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as Char123LocaleChar125RouteRouteImport } from './routes/{-$locale}/route'
import { Route as Char123LocaleChar125IndexRouteImport } from './routes/{-$locale}/index'
import { Route as Char123LocaleChar125CreateFirstBudgetRouteImport } from './routes/{-$locale}/create-first-budget'
import { Route as Char123LocaleChar125AppRouteRouteImport } from './routes/{-$locale}/app/route'
import { Route as Char123LocaleChar125AppIndexRouteImport } from './routes/{-$locale}/app/index'
import { Route as Char123LocaleChar125AppProfileRouteImport } from './routes/{-$locale}/app/profile'
import { Route as Char123LocaleChar125AppDashboardRouteImport } from './routes/{-$locale}/app/dashboard'
import { Route as Char123LocaleChar125AppChatRouteImport } from './routes/{-$locale}/app/chat'
import { Route as Char123LocaleChar125AppAddIndexRouteImport } from './routes/{-$locale}/app/add.index'
import { Route as Char123LocaleChar125AppAddCategoryRouteImport } from './routes/{-$locale}/app/add.$category'
import { Route as Char123LocaleChar125AppAddCategoryIndexRouteImport } from './routes/{-$locale}/app/add.$category.index'
import { Route as Char123LocaleChar125AppAddCategorySubcategoryIndexRouteImport } from './routes/{-$locale}/app/add.$category.$subcategory.index'
import { ServerRoute as TrpcSplatServerRouteImport } from './routes/trpc.$'
import { ServerRoute as AuthSplatServerRouteImport } from './routes/auth.$'

const rootServerRouteImport = createServerRootRoute()

const Char123LocaleChar125RouteRoute =
  Char123LocaleChar125RouteRouteImport.update({
    id: '/{-$locale}',
    path: '/{-$locale}',
    getParentRoute: () => rootRouteImport,
  } as any)
const Char123LocaleChar125IndexRoute =
  Char123LocaleChar125IndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => Char123LocaleChar125RouteRoute,
  } as any)
const Char123LocaleChar125CreateFirstBudgetRoute =
  Char123LocaleChar125CreateFirstBudgetRouteImport.update({
    id: '/create-first-budget',
    path: '/create-first-budget',
    getParentRoute: () => Char123LocaleChar125RouteRoute,
  } as any)
const Char123LocaleChar125AppRouteRoute =
  Char123LocaleChar125AppRouteRouteImport.update({
    id: '/app',
    path: '/app',
    getParentRoute: () => Char123LocaleChar125RouteRoute,
  } as any)
const Char123LocaleChar125AppIndexRoute =
  Char123LocaleChar125AppIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => Char123LocaleChar125AppRouteRoute,
  } as any)
const Char123LocaleChar125AppProfileRoute =
  Char123LocaleChar125AppProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => Char123LocaleChar125AppRouteRoute,
  } as any)
const Char123LocaleChar125AppDashboardRoute =
  Char123LocaleChar125AppDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => Char123LocaleChar125AppRouteRoute,
  } as any)
const Char123LocaleChar125AppChatRoute =
  Char123LocaleChar125AppChatRouteImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => Char123LocaleChar125AppRouteRoute,
  } as any)
const Char123LocaleChar125AppAddIndexRoute =
  Char123LocaleChar125AppAddIndexRouteImport.update({
    id: '/add/',
    path: '/add/',
    getParentRoute: () => Char123LocaleChar125AppRouteRoute,
  } as any)
const Char123LocaleChar125AppAddCategoryRoute =
  Char123LocaleChar125AppAddCategoryRouteImport.update({
    id: '/add/$category',
    path: '/add/$category',
    getParentRoute: () => Char123LocaleChar125AppRouteRoute,
  } as any)
const Char123LocaleChar125AppAddCategoryIndexRoute =
  Char123LocaleChar125AppAddCategoryIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => Char123LocaleChar125AppAddCategoryRoute,
  } as any)
const Char123LocaleChar125AppAddCategorySubcategoryIndexRoute =
  Char123LocaleChar125AppAddCategorySubcategoryIndexRouteImport.update({
    id: '/$subcategory/',
    path: '/$subcategory/',
    getParentRoute: () => Char123LocaleChar125AppAddCategoryRoute,
  } as any)
const TrpcSplatServerRoute = TrpcSplatServerRouteImport.update({
  id: '/trpc/$',
  path: '/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const AuthSplatServerRoute = AuthSplatServerRouteImport.update({
  id: '/auth/$',
  path: '/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/{-$locale}': typeof Char123LocaleChar125RouteRouteWithChildren
  '/{-$locale}/app': typeof Char123LocaleChar125AppRouteRouteWithChildren
  '/{-$locale}/create-first-budget': typeof Char123LocaleChar125CreateFirstBudgetRoute
  '/{-$locale}/': typeof Char123LocaleChar125IndexRoute
  '/{-$locale}/app/chat': typeof Char123LocaleChar125AppChatRoute
  '/{-$locale}/app/dashboard': typeof Char123LocaleChar125AppDashboardRoute
  '/{-$locale}/app/profile': typeof Char123LocaleChar125AppProfileRoute
  '/{-$locale}/app/': typeof Char123LocaleChar125AppIndexRoute
  '/{-$locale}/app/add/$category': typeof Char123LocaleChar125AppAddCategoryRouteWithChildren
  '/{-$locale}/app/add': typeof Char123LocaleChar125AppAddIndexRoute
  '/{-$locale}/app/add/$category/': typeof Char123LocaleChar125AppAddCategoryIndexRoute
  '/{-$locale}/app/add/$category/$subcategory': typeof Char123LocaleChar125AppAddCategorySubcategoryIndexRoute
}
export interface FileRoutesByTo {
  '/{-$locale}/create-first-budget': typeof Char123LocaleChar125CreateFirstBudgetRoute
  '/{-$locale}': typeof Char123LocaleChar125IndexRoute
  '/{-$locale}/app/chat': typeof Char123LocaleChar125AppChatRoute
  '/{-$locale}/app/dashboard': typeof Char123LocaleChar125AppDashboardRoute
  '/{-$locale}/app/profile': typeof Char123LocaleChar125AppProfileRoute
  '/{-$locale}/app': typeof Char123LocaleChar125AppIndexRoute
  '/{-$locale}/app/add': typeof Char123LocaleChar125AppAddIndexRoute
  '/{-$locale}/app/add/$category': typeof Char123LocaleChar125AppAddCategoryIndexRoute
  '/{-$locale}/app/add/$category/$subcategory': typeof Char123LocaleChar125AppAddCategorySubcategoryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/{-$locale}': typeof Char123LocaleChar125RouteRouteWithChildren
  '/{-$locale}/app': typeof Char123LocaleChar125AppRouteRouteWithChildren
  '/{-$locale}/create-first-budget': typeof Char123LocaleChar125CreateFirstBudgetRoute
  '/{-$locale}/': typeof Char123LocaleChar125IndexRoute
  '/{-$locale}/app/chat': typeof Char123LocaleChar125AppChatRoute
  '/{-$locale}/app/dashboard': typeof Char123LocaleChar125AppDashboardRoute
  '/{-$locale}/app/profile': typeof Char123LocaleChar125AppProfileRoute
  '/{-$locale}/app/': typeof Char123LocaleChar125AppIndexRoute
  '/{-$locale}/app/add/$category': typeof Char123LocaleChar125AppAddCategoryRouteWithChildren
  '/{-$locale}/app/add/': typeof Char123LocaleChar125AppAddIndexRoute
  '/{-$locale}/app/add/$category/': typeof Char123LocaleChar125AppAddCategoryIndexRoute
  '/{-$locale}/app/add/$category/$subcategory/': typeof Char123LocaleChar125AppAddCategorySubcategoryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/{-$locale}'
    | '/{-$locale}/app'
    | '/{-$locale}/create-first-budget'
    | '/{-$locale}/'
    | '/{-$locale}/app/chat'
    | '/{-$locale}/app/dashboard'
    | '/{-$locale}/app/profile'
    | '/{-$locale}/app/'
    | '/{-$locale}/app/add/$category'
    | '/{-$locale}/app/add'
    | '/{-$locale}/app/add/$category/'
    | '/{-$locale}/app/add/$category/$subcategory'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/{-$locale}/create-first-budget'
    | '/{-$locale}'
    | '/{-$locale}/app/chat'
    | '/{-$locale}/app/dashboard'
    | '/{-$locale}/app/profile'
    | '/{-$locale}/app'
    | '/{-$locale}/app/add'
    | '/{-$locale}/app/add/$category'
    | '/{-$locale}/app/add/$category/$subcategory'
  id:
    | '__root__'
    | '/{-$locale}'
    | '/{-$locale}/app'
    | '/{-$locale}/create-first-budget'
    | '/{-$locale}/'
    | '/{-$locale}/app/chat'
    | '/{-$locale}/app/dashboard'
    | '/{-$locale}/app/profile'
    | '/{-$locale}/app/'
    | '/{-$locale}/app/add/$category'
    | '/{-$locale}/app/add/'
    | '/{-$locale}/app/add/$category/'
    | '/{-$locale}/app/add/$category/$subcategory/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Char123LocaleChar125RouteRoute: typeof Char123LocaleChar125RouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/auth/$': typeof AuthSplatServerRoute
  '/trpc/$': typeof TrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/auth/$': typeof AuthSplatServerRoute
  '/trpc/$': typeof TrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/auth/$': typeof AuthSplatServerRoute
  '/trpc/$': typeof TrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/auth/$' | '/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/auth/$' | '/trpc/$'
  id: '__root__' | '/auth/$' | '/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  AuthSplatServerRoute: typeof AuthSplatServerRoute
  TrpcSplatServerRoute: typeof TrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/{-$locale}': {
      id: '/{-$locale}'
      path: '/{-$locale}'
      fullPath: '/{-$locale}'
      preLoaderRoute: typeof Char123LocaleChar125RouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$locale}/': {
      id: '/{-$locale}/'
      path: '/'
      fullPath: '/{-$locale}/'
      preLoaderRoute: typeof Char123LocaleChar125IndexRouteImport
      parentRoute: typeof Char123LocaleChar125RouteRoute
    }
    '/{-$locale}/create-first-budget': {
      id: '/{-$locale}/create-first-budget'
      path: '/create-first-budget'
      fullPath: '/{-$locale}/create-first-budget'
      preLoaderRoute: typeof Char123LocaleChar125CreateFirstBudgetRouteImport
      parentRoute: typeof Char123LocaleChar125RouteRoute
    }
    '/{-$locale}/app': {
      id: '/{-$locale}/app'
      path: '/app'
      fullPath: '/{-$locale}/app'
      preLoaderRoute: typeof Char123LocaleChar125AppRouteRouteImport
      parentRoute: typeof Char123LocaleChar125RouteRoute
    }
    '/{-$locale}/app/': {
      id: '/{-$locale}/app/'
      path: '/'
      fullPath: '/{-$locale}/app/'
      preLoaderRoute: typeof Char123LocaleChar125AppIndexRouteImport
      parentRoute: typeof Char123LocaleChar125AppRouteRoute
    }
    '/{-$locale}/app/profile': {
      id: '/{-$locale}/app/profile'
      path: '/profile'
      fullPath: '/{-$locale}/app/profile'
      preLoaderRoute: typeof Char123LocaleChar125AppProfileRouteImport
      parentRoute: typeof Char123LocaleChar125AppRouteRoute
    }
    '/{-$locale}/app/dashboard': {
      id: '/{-$locale}/app/dashboard'
      path: '/dashboard'
      fullPath: '/{-$locale}/app/dashboard'
      preLoaderRoute: typeof Char123LocaleChar125AppDashboardRouteImport
      parentRoute: typeof Char123LocaleChar125AppRouteRoute
    }
    '/{-$locale}/app/chat': {
      id: '/{-$locale}/app/chat'
      path: '/chat'
      fullPath: '/{-$locale}/app/chat'
      preLoaderRoute: typeof Char123LocaleChar125AppChatRouteImport
      parentRoute: typeof Char123LocaleChar125AppRouteRoute
    }
    '/{-$locale}/app/add/': {
      id: '/{-$locale}/app/add/'
      path: '/add'
      fullPath: '/{-$locale}/app/add'
      preLoaderRoute: typeof Char123LocaleChar125AppAddIndexRouteImport
      parentRoute: typeof Char123LocaleChar125AppRouteRoute
    }
    '/{-$locale}/app/add/$category': {
      id: '/{-$locale}/app/add/$category'
      path: '/add/$category'
      fullPath: '/{-$locale}/app/add/$category'
      preLoaderRoute: typeof Char123LocaleChar125AppAddCategoryRouteImport
      parentRoute: typeof Char123LocaleChar125AppRouteRoute
    }
    '/{-$locale}/app/add/$category/': {
      id: '/{-$locale}/app/add/$category/'
      path: '/'
      fullPath: '/{-$locale}/app/add/$category/'
      preLoaderRoute: typeof Char123LocaleChar125AppAddCategoryIndexRouteImport
      parentRoute: typeof Char123LocaleChar125AppAddCategoryRoute
    }
    '/{-$locale}/app/add/$category/$subcategory/': {
      id: '/{-$locale}/app/add/$category/$subcategory/'
      path: '/$subcategory'
      fullPath: '/{-$locale}/app/add/$category/$subcategory'
      preLoaderRoute: typeof Char123LocaleChar125AppAddCategorySubcategoryIndexRouteImport
      parentRoute: typeof Char123LocaleChar125AppAddCategoryRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/trpc/$': {
      id: '/trpc/$'
      path: '/trpc/$'
      fullPath: '/trpc/$'
      preLoaderRoute: typeof TrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/auth/$': {
      id: '/auth/$'
      path: '/auth/$'
      fullPath: '/auth/$'
      preLoaderRoute: typeof AuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface Char123LocaleChar125AppAddCategoryRouteChildren {
  Char123LocaleChar125AppAddCategoryIndexRoute: typeof Char123LocaleChar125AppAddCategoryIndexRoute
  Char123LocaleChar125AppAddCategorySubcategoryIndexRoute: typeof Char123LocaleChar125AppAddCategorySubcategoryIndexRoute
}

const Char123LocaleChar125AppAddCategoryRouteChildren: Char123LocaleChar125AppAddCategoryRouteChildren =
  {
    Char123LocaleChar125AppAddCategoryIndexRoute:
      Char123LocaleChar125AppAddCategoryIndexRoute,
    Char123LocaleChar125AppAddCategorySubcategoryIndexRoute:
      Char123LocaleChar125AppAddCategorySubcategoryIndexRoute,
  }

const Char123LocaleChar125AppAddCategoryRouteWithChildren =
  Char123LocaleChar125AppAddCategoryRoute._addFileChildren(
    Char123LocaleChar125AppAddCategoryRouteChildren,
  )

interface Char123LocaleChar125AppRouteRouteChildren {
  Char123LocaleChar125AppChatRoute: typeof Char123LocaleChar125AppChatRoute
  Char123LocaleChar125AppDashboardRoute: typeof Char123LocaleChar125AppDashboardRoute
  Char123LocaleChar125AppProfileRoute: typeof Char123LocaleChar125AppProfileRoute
  Char123LocaleChar125AppIndexRoute: typeof Char123LocaleChar125AppIndexRoute
  Char123LocaleChar125AppAddCategoryRoute: typeof Char123LocaleChar125AppAddCategoryRouteWithChildren
  Char123LocaleChar125AppAddIndexRoute: typeof Char123LocaleChar125AppAddIndexRoute
}

const Char123LocaleChar125AppRouteRouteChildren: Char123LocaleChar125AppRouteRouteChildren =
  {
    Char123LocaleChar125AppChatRoute: Char123LocaleChar125AppChatRoute,
    Char123LocaleChar125AppDashboardRoute:
      Char123LocaleChar125AppDashboardRoute,
    Char123LocaleChar125AppProfileRoute: Char123LocaleChar125AppProfileRoute,
    Char123LocaleChar125AppIndexRoute: Char123LocaleChar125AppIndexRoute,
    Char123LocaleChar125AppAddCategoryRoute:
      Char123LocaleChar125AppAddCategoryRouteWithChildren,
    Char123LocaleChar125AppAddIndexRoute: Char123LocaleChar125AppAddIndexRoute,
  }

const Char123LocaleChar125AppRouteRouteWithChildren =
  Char123LocaleChar125AppRouteRoute._addFileChildren(
    Char123LocaleChar125AppRouteRouteChildren,
  )

interface Char123LocaleChar125RouteRouteChildren {
  Char123LocaleChar125AppRouteRoute: typeof Char123LocaleChar125AppRouteRouteWithChildren
  Char123LocaleChar125CreateFirstBudgetRoute: typeof Char123LocaleChar125CreateFirstBudgetRoute
  Char123LocaleChar125IndexRoute: typeof Char123LocaleChar125IndexRoute
}

const Char123LocaleChar125RouteRouteChildren: Char123LocaleChar125RouteRouteChildren =
  {
    Char123LocaleChar125AppRouteRoute:
      Char123LocaleChar125AppRouteRouteWithChildren,
    Char123LocaleChar125CreateFirstBudgetRoute:
      Char123LocaleChar125CreateFirstBudgetRoute,
    Char123LocaleChar125IndexRoute: Char123LocaleChar125IndexRoute,
  }

const Char123LocaleChar125RouteRouteWithChildren =
  Char123LocaleChar125RouteRoute._addFileChildren(
    Char123LocaleChar125RouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  Char123LocaleChar125RouteRoute: Char123LocaleChar125RouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  AuthSplatServerRoute: AuthSplatServerRoute,
  TrpcSplatServerRoute: TrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
